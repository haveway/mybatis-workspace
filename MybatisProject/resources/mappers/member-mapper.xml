<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">
<!-- namespace : 해당 mapper파일의 고유한 별칭 그리고 mapper파일이기 떄문에 전체가 mapper태그로 감싸져 있어야한다. -->

	<!-- 
		* DML 문일 경우
		<insert id="각 sql문들의 식별자" parameterType="전달받을자바타입(풀클래스명) 혹은 별칭">
			쿼리문 작성
		</insert>
		<update></update>
		<delete></delete>
		
		=> parameterType속성은 전달받을 값이 없다면 생략 가능하다.
		=> update, delete태그도 마찬가지
		
		* SELECT문일 경우
		<select id="각 sql문들의 식별자" parameterType="전달받을자바타입(풀클래스명) 혹은 별칭"
		resultType="조회결과를 반환하고자 하는 자바타입" 또는 resultMap="조회결과를 뽑아서 매핑할 resultMap의 id">
			쿼리문 작성
		</select>
		
		=> parameterType속성은 전달받을 값이 없다면 생략 가능하다.
		=> 반드시 resultType(자바에서 제공하는 자료형) 또는 resultMap(내가 만든 VO클래스 타입)으로 결과값에 대한 타입을 지정해야한다.
		=> 왜냐?? 항상 SELECT는 결과가 다를 수 있으니까(count)쓰면 정수, name조회면 문자열
	
		* DML문의 경우 어차피 실행결과가 처리된 행의 갯수(int)기 때문에 resultType이나 resultMap을 쓰지않음!
		*
	 -->
	 
	 <insert id="insertMember" parameterType="member">
	 	INSERT
		  INTO
		       MEMBER
		       (
		       USER_NO
		      ,USER_ID
		      ,USER_PWD
		      ,USER_NAME
		      ,EMAIL
		      ,BIRTHDAY
		      ,GENDER
		      ,PHONE
		      ,ADDRESS
		       )
		VALUES
		      (
		      SEQ_UNO.NEXTVAL
		     ,#{userId}
		     ,#{userPwd}
		     ,#{userName}
		     ,#{email}
		     ,#{birthday}
		     ,#{gender}
		     ,#{phone}
		     ,#{address}
		     )
	 </insert>
	 
	 <!-- 
	 	* resultMap : 마이바티스의 핵심 요소
	 				ResultSet으로부터 조회된 컬럼값을 하나씩 뽑아서 내가 지정한 VO객체에 각 필드에 담는 JDBC코드를 줄여주는 역할
	 
		<resultMap id="식별자" type="조회된 결과를 담아서 반환하고자 하는 VO객체의 타입(풀클래스명)또는 별칭">
			<result column="조회결과를 뽑고자하는 DB컬럼명" property="해당 결과를 담고자하는 필드명" />
			<result column="조회결과를 뽑고자하는 DB컬럼명" property="해당 결과를 담고자하는 필드명" />
			...
		</resultMap>
	  -->
	  
	<resultMap id="memberResultSet" type="member">
		<result column="USER_NO" property="userNo" /> <!-- m.setUserNo(rset.getInt("USER_NO")); -->
		<result column="USER_ID" property="userId" />
		<result column="USER_PWD" property="userPwd" />
		<result column="USER_NAME" property="userName" />
		<result column="EMAIL" property="email" />
		<result column="BIRTHDAY" property="birthday" />
		<result column="GENDER" property="gender" />
		<result column="PHONE" property="phone" />
		<result column="ADDRESS" property="address" />
		<result column="ENROLL_DATE" property="enrollDate" />
		<result column="MODIFY_DATE" property="modifyDate" />
		<result column="STATUS" property="status" />
	</resultMap>

	<!-- <select id="loginMember" parameterType="member" resultMap="memberResultSet"> -->
	<select id="loginMember" parameterType="member" resultType="member">
		SELECT  
		       USER_NO,
		       USER_ID,
		       USER_PWD,
		       USER_NAME,
		       EMAIL,
		       BIRTHDAY,
		       GENDER,
		       PHONE,
		       ADDRESS,
		       ENROLL_DATE,
		       MODIFY_DATE,
		       STATUS
		  FROM
		       MEMBER
		 WHERE
		       USER_ID = #{userId}
		   AND USER_PWD = #{userPwd}
		   AND STATUS = 'Y'
	</select>



</mapper>